// <auto-generated />
using System;
using EnumerateFolders.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EnumerateFolders.Migrations
{
    [DbContext(typeof(SqlSrvCtx))]
    partial class SqlSrvCtxModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EnumerateFolders.Entities.Category", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Extensions");

                    b.Property<string>("FolderLocations");

                    b.HasKey("Name");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EnumerateFolders.Entities.Drive", b =>
                {
                    b.Property<string>("LogicalDrive")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("ScanPriority");

                    b.HasKey("LogicalDrive");

                    b.ToTable("Drives");
                });

            modelBuilder.Entity("EnumerateFolders.Entities.File", b =>
                {
                    b.Property<string>("FullPathHash")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.Property<long>("FileSize");

                    b.Property<string>("FolderHash");

                    b.Property<string>("Name");

                    b.HasKey("FullPathHash");

                    b.HasIndex("CategoryName");

                    b.HasIndex("FolderHash");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("EnumerateFolders.Entities.Folder", b =>
                {
                    b.Property<string>("FullPathHash")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.Property<long>("FolderSize");

                    b.Property<DateTime>("LastChecked");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.HasKey("FullPathHash");

                    b.HasIndex("CategoryName");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("EnumerateFolders.Entities.File", b =>
                {
                    b.HasOne("EnumerateFolders.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryName");

                    b.HasOne("EnumerateFolders.Entities.Folder", "Folder")
                        .WithMany()
                        .HasForeignKey("FolderHash");
                });

            modelBuilder.Entity("EnumerateFolders.Entities.Folder", b =>
                {
                    b.HasOne("EnumerateFolders.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryName");
                });
#pragma warning restore 612, 618
        }
    }
}
